<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
    xmlns:converters1="clr-namespace:HatNewUI.Converters"
    xmlns:helpers="clr-namespace:HatNewUI.Helpers"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls">

    <converters:ToUpperConverter x:Key="ToUpperConverter" />
    <converters1:MultiBindingEqualityComparer x:Key="MultiEqualityComparer" />
    <converters1:BooleanImplementConverter
        x:Key="InvertBooleanConverter"
        False="True"
        True="False" />

    <Style BasedOn="{StaticResource NormalButtonStyle}" TargetType="Button" />

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{StaticResource DataGridRowColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource DataGridRowBorderColorBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,2" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <!--<Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border
                        x:Name="DGR_Border"
                        Margin="-1,0"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter
                                Grid.Column="1"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter
                                Grid.Row="1"
                                Grid.Column="1"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                Visibility="{TemplateBinding DetailsVisibility}" />
                            <DataGridRowHeader
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="0"
                                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DGR_Border" Property="Background" Value="{StaticResource DataGridRowMouseOverColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="DGR_Border" Property="Background" Value="{StaticResource DataGridSelectedRowColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="MetroRowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="{DynamicResource GrayBrush5}" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle
                            Width="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroDataGridColumnHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,4,4,7" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}" />
        <Setter Property="Background" Value="{DynamicResource GrayBrush8}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border
                            x:Name="BackgroundBorder"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0,0,0,3" />

                        <ContentPresenter
                            x:Name="HeaderContent"
                            Grid.Column="0"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            RecognizesAccessKey="True"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <Path
                            x:Name="SortArrow"
                            Grid.Column="1"
                            Width="8"
                            Height="10"
                            Margin="0,0,8,2"
                            VerticalAlignment="Center"
                            Fill="{DynamicResource GrayBrush2}"
                            RenderTransformOrigin="0.5,0.5"
                            Stretch="Fill"
                            Visibility="Collapsed" />

                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            Grid.Column="0"
                            HorizontalAlignment="Left"
                            HorizontalContentAlignment="Left"
                            Background="Transparent"
                            Style="{StaticResource MetroColumnHeaderGripperStyle}" />

                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            HorizontalContentAlignment="Right"
                            Style="{StaticResource MetroColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource WhiteBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource GrayBrush8}" />
                        </MultiTrigger>

                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="Data" Value="F1 M 34,57L 42,57L 42,32.25L 52,42.25L 52,31.75L 38,17.75L 24,31.75L 24,42.25L 34,32.25L 34,57 Z " />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="Data" Value="F1 M 42,19.0002L 34,19.0002L 34,43.7502L 24,33.7502L 24,44.2502L 38,58.2502L 52,44.2502L 52,33.7502L 42,43.7502L 42,19.0002 Z " />
                            <Setter TargetName="SortArrow" Property="Margin" Value="0,0,8,0" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock FontWeight="SemiBold" Text="{Binding Converter={StaticResource ToUpperConverter}}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MetroDataGridRowHeader" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}" />
        <Setter Property="BorderThickness" Value="0,0,1,0" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                        </Border>
                        <Thumb
                            x:Name="PART_TopHeaderGripper"
                            Height="3"
                            VerticalAlignment="Top"
                            Style="{StaticResource MetroRowHeaderGripperStyle}" />
                        <Thumb
                            x:Name="PART_BottomHeaderGripper"
                            Height="3"
                            VerticalAlignment="Bottom"
                            Style="{StaticResource MetroRowHeaderGripperStyle}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ____________________ Metro CellStyle ____________________  -->
    <Style x:Key="MetroDataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MetroDataGrid" TargetType="{x:Type DataGrid}">
        <Setter Property="MinRowHeight" Value="25" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="BorderThickness" Value="0,0,0,0" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource GrayBrush7}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource GrayBrush7}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource MetroDataGridColumnHeader}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource MetroDataGridRowHeader}" />
        <Setter Property="CellStyle" Value="{StaticResource MetroDataGridCell}" />
        <Setter Property="RowStyle" Value="{DynamicResource MetroDataGridRow}" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="Separator">
                    <Setter Property="Background" Value="{DynamicResource GrayBrush7}" />
                    <Setter Property="Width" Value="2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Separator">
                                <Rectangle
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    Fill="{TemplateBinding Background}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button
                                            Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                            Command="{x:Static DataGrid.SelectAllCommand}"
                                            Focusable="false"
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=MetroDataGridSelectAllButtonStyle,
                                                                                          TypeInTargetAssembly={x:Type DataGrid}}}"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter
                                            x:Name="PART_ColumnHeadersPresenter"
                                            Grid.Row="0"
                                            Grid.Column="1"
                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Grid
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2">
                                            <ScrollContentPresenter
                                                x:Name="PART_ScrollContentPresenter"
                                                Grid.Row="1"
                                                Grid.ColumnSpan="2"
                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        </Grid>
                                        <ScrollBar
                                            x:Name="PART_VerticalScrollBar"
                                            Grid.Row="1"
                                            Grid.Column="2"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            Orientation="Vertical"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar
                                                x:Name="PART_HorizontalScrollBar"
                                                Grid.Column="1"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                Orientation="Horizontal"
                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource MetroDataGrid}" TargetType="{x:Type DataGrid}">
        <Setter Property="MinRowHeight" Value="40" />
        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="MinWidth" Value="0" />
                    <Setter Property="MinHeight" Value="40" />
                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="HorizontalContentAlignment" Value="Left" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                    <Setter Property="Padding" Value="10,4,4,7" />
                    <Setter Property="Margin" Value="0,0,0,0" />
                    <Setter Property="BorderBrush" Value="White" />
                    <Setter Property="Background" Value="{StaticResource DataGridColumnHeaderColorBrush}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        x:Name="BackgroundBorder"
                                        Grid.ColumnSpan="2"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="0,0,0,3"
                                        CornerRadius="5" />

                                    <ContentPresenter
                                        x:Name="HeaderContent"
                                        Grid.Column="0"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    <Path
                                        x:Name="SortArrow"
                                        Grid.Column="1"
                                        Width="8"
                                        Height="10"
                                        Margin="0,0,8,2"
                                        VerticalAlignment="Center"
                                        Fill="{DynamicResource GrayBrush2}"
                                        RenderTransformOrigin="0.5,0.5"
                                        Stretch="Fill"
                                        Visibility="Collapsed" />

                                    <Thumb
                                        x:Name="PART_LeftHeaderGripper"
                                        Grid.Column="0"
                                        HorizontalAlignment="Left"
                                        HorizontalContentAlignment="Left"
                                        Background="Transparent"
                                        Style="{StaticResource MetroColumnHeaderGripperStyle}" />

                                    <Thumb
                                        x:Name="PART_RightHeaderGripper"
                                        Grid.Column="1"
                                        HorizontalAlignment="Right"
                                        HorizontalContentAlignment="Right"
                                        Background="Transparent"
                                        Style="{StaticResource MetroColumnHeaderGripperStyle}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <!--<Trigger Property="SortDirection" Value="{x:Null}">
                                        <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource WhiteBrush}" />
                                    </Trigger>-->
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="SortDirection" Value="{x:Null}" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource GrayBrush8}" />
                                    </MultiTrigger>

                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="SortArrow" Property="Data" Value="F1 M 34,57L 42,57L 42,32.25L 52,42.25L 52,31.75L 38,17.75L 24,31.75L 24,42.25L 34,32.25L 34,57 Z " />
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="SortArrow" Property="Data" Value="F1 M 42,19.0002L 34,19.0002L 34,43.7502L 24,33.7502L 24,44.2502L 38,58.2502L 52,44.2502L 52,33.7502L 42,43.7502L 42,19.0002 Z " />
                                        <Setter TargetName="SortArrow" Property="Margin" Value="0,0,8,0" />
                                    </Trigger>
                                    <Trigger Property="DisplayIndex" Value="0">
                                        <Setter TargetName="PART_LeftHeaderGripper" Property="Visibility" Value="Collapsed" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource ToUpperConverter}}" TextBlock.FontWeight="SemiBold" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="InputDataGridRow"
        BasedOn="{StaticResource {x:Type DataGridRow}}"
        TargetType="{x:Type DataGridRow}">
        <Setter Property="IsEnabled" Value="False" />
        <Style.Triggers>

            <DataTrigger Binding="{Binding Path=(helpers:AttachedProperties.InputDrivenGridDataContext).IsEditing, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="False">
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>


            <DataTrigger Binding="{Binding Path=(helpers:AttachedProperties.InputDrivenGridDataContext).IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}" Value="False">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>


            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <MultiBinding Converter="{StaticResource MultiEqualityComparer}">
                        <Binding />
                        <Binding Path="(helpers:AttachedProperties.InputDrivenGridDataContext).SelectedItem" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}" />
                    </MultiBinding>
                </DataTrigger.Binding>
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style
        x:Key="InputDataGrid"
        x:Shared="False"
        BasedOn="{StaticResource {x:Type DataGrid}}"
        TargetType="{x:Type DataGrid}">
        <Style.Setters>
            <Setter Property="ItemsSource" Value="{Binding (helpers:AttachedProperties.InputDrivenGridDataContext).Items, RelativeSource={RelativeSource Self}}" />
            <Setter Property="SelectedItem" Value="{Binding (helpers:AttachedProperties.InputDrivenGridDataContext).SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource Self}}" />
            <Setter Property="SelectedIndex" Value="{Binding (helpers:AttachedProperties.InputDrivenGridDataContext).SelectedIndex, Mode=TwoWay, RelativeSource={RelativeSource Self}}" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="RowStyle" Value="{StaticResource InputDataGridRow}" />

            <Setter Property="helpers:AttachedProperties.Triggers">
                <Setter.Value>
                    <helpers:StyleTriggerCollection>
                        <i:EventTrigger EventName="Loaded">
                            <helpers:EventBinding Command="{Binding Path=TriggerVisual.(helpers:AttachedProperties.InputDrivenGridDataContext).CreatingDataGrid, RelativeSource={RelativeSource Self}}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="BeginningEdit">
                            <helpers:EventBinding Command="{Binding Path=TriggerVisual.(helpers:AttachedProperties.InputDrivenGridDataContext).BeginningEdit, RelativeSource={RelativeSource Self}}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="CellEditEnding">
                            <helpers:EventBinding Command="{Binding Path=TriggerVisual.(helpers:AttachedProperties.InputDrivenGridDataContext).EndingEdit, RelativeSource={RelativeSource Self}}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>

                        <i:EventTrigger EventName="RowEditEnding">
                            <helpers:EventBinding Command="{Binding Path=TriggerVisual.(helpers:AttachedProperties.InputDrivenGridDataContext).RowEditEnding, RelativeSource={RelativeSource Self}}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>

                        <i:EventTrigger EventName="PreviewKeyDown">
                            <helpers:EventBinding Command="{Binding Path=TriggerVisual.(helpers:AttachedProperties.InputDrivenGridDataContext).KeyDown, RelativeSource={RelativeSource Self}}" PassEventArgsToCommand="True" />
                        </i:EventTrigger>
                    </helpers:StyleTriggerCollection>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">

                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Grid Grid.Row="0" Grid.Column="1">
                                                <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                                <StackPanel
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Top"
                                                    Orientation="Horizontal">
                                                    <!--<TextBlock Text="MANAGE" FontWeight="DemiBold" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5, 5, 5, 8"/>-->
                                                    <Button
                                                        Margin="5,5,5,8"
                                                        Padding="10,2"
                                                        Command="{Binding DataContext.Refresh, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
                                                        Content="REFRESH" />
                                                </StackPanel>
                                            </Grid>

                                            <Grid
                                                Grid.Row="1"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>

                                                <!--  ADD NEW ITEM BUTTON  -->
                                                <Button
                                                    Padding="10,2"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Top"
                                                    AutomationProperties.AutomationId="NewItemButton"
                                                    Command="{Binding DataContext.Add, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}}"
                                                    Content="New Item"
                                                    IsEnabled="{Binding DataContext.IsEditing, Converter={StaticResource InvertBooleanConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />

                                                <ScrollContentPresenter
                                                    x:Name="PART_ScrollContentPresenter"
                                                    Grid.Row="1"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            </Grid>

                                            <ScrollBar
                                                x:Name="PART_VerticalScrollBar"
                                                Grid.Row="1"
                                                Grid.Column="2"
                                                Maximum="{TemplateBinding ScrollableHeight}"
                                                Orientation="Vertical"
                                                ViewportSize="{TemplateBinding ViewportHeight}"
                                                Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />


                                            <Grid Grid.Row="2" Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar
                                                    x:Name="PART_HorizontalScrollBar"
                                                    Grid.Column="1"
                                                    Maximum="{TemplateBinding ScrollableWidth}"
                                                    Orientation="Horizontal"
                                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                    Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>

                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>



    <Style
        x:Key="ValidatedTextBoxStyle"
        BasedOn="{StaticResource {x:Type TextBox}}"
        TargetType="{x:Type TextBox}">
        <!--<Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorTemplate}"/>-->
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <AdornedElementPlaceholder x:Name="placeholder">
                        <Grid SnapsToDevicePixels="True">
                            <Rectangle
                                x:Name="PopupTargetElement"
                                Margin="-5,0,-5,0"
                                DataContext="{Binding ElementName=placeholder}"
                                StrokeThickness="0" />
                            <Border
                                x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource WarningRedBrush}"
                                BorderThickness="1"
                                DataContext="{Binding ElementName=placeholder}">
                                <Grid
                                    Width="12"
                                    Height="12"
                                    Margin="1,-4,-4,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Background="Transparent">
                                    <Path
                                        Margin="1,3,0,0"
                                        Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                        Fill="{DynamicResource ValidationBrush5}" />
                                    <Path
                                        Margin="1,3,0,0"
                                        Data="M 0,0 L2,0 L 8,6 L8,8"
                                        Fill="{DynamicResource WhiteColorBrush}" />
                                </Grid>
                            </Border>

                            <metro:CustomValidationPopup
                                HorizontalAlignment="Right"
                                AllowsTransparency="True"
                                HorizontalOffset="0"
                                IsOpen="{Binding ElementName=placeholder, Path=AdornedElement.IsKeyboardFocusWithin, Mode=OneWay}"
                                Placement="Right"
                                PlacementTarget="{Binding ElementName=PopupTargetElement}"
                                PopupAnimation="Fade"
                                VerticalOffset="0">
                                <Grid x:Name="Root" Margin="4">
                                    <Grid.Resources>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=Root, Path=IsMouseOver, Mode=OneWay}" Value="True">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    To="0.15"
                                                                    Duration="0:0:0.1" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation
                                                                    Storyboard.TargetProperty="Opacity"
                                                                    To="1"
                                                                    Duration="0:0:0.1" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Resources>
                                    <Border
                                        Margin="4,4,-4,-4"
                                        Background="{StaticResource WarningRedBrush}"
                                        CornerRadius="5" />
                                    <Border
                                        Margin="3,3,-3,-3"
                                        Background="{StaticResource WarningRedBrush}"
                                        CornerRadius="4" />
                                    <Border
                                        Margin="2,2,-2,-2"
                                        Background="{StaticResource WarningRedBrush}"
                                        CornerRadius="3" />
                                    <Border
                                        Margin="1,1,-1,-1"
                                        Background="{StaticResource WarningRedBrush}"
                                        CornerRadius="2" />
                                    <Border Background="{StaticResource WarningRedBrush}" CornerRadius="2">
                                        <Border.Resources>
                                            <DataTemplate DataType="{x:Type ValidationError}">
                                                <TextBlock
                                                    MaxWidth="250"
                                                    Margin="8,4,8,4"
                                                    Foreground="{DynamicResource ValidationTextBrush}"
                                                    Text="{Binding ErrorContent}"
                                                    TextWrapping="Wrap"
                                                    UseLayoutRounding="false" />
                                            </DataTemplate>
                                        </Border.Resources>
                                        <ContentPresenter Content="{Binding CurrentItem}" />
                                    </Border>
                                </Grid>
                            </metro:CustomValidationPopup>
                        </Grid>
                    </AdornedElementPlaceholder>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>